{"mappings":"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","sources":["src/esmodule.ts","src/index.ts"],"sourcesContent":["import SimpleSparkLineChart from \"./index\";\nexport default SimpleSparkLineChart;","/*\n *\n * Simple SparkLine Chart\n * @version 0.1.0\n * @license MIT\n * @author https://github.com/dejurin\n *\n * https://github.com/dejurin/simple-sparkline\n *\n */\n\nclass SimpleSparkLineChart {\n  constructor(selector: string) {\n    const elements = document.querySelectorAll<HTMLElement>(selector);\n    elements.forEach((element) => {\n      this.createChart(element);\n    });\n  }\n\n  private createChart(element: HTMLElement): void {\n    const valuesAttr = element.dataset.values;\n    let dataValues: number[] = [];\n    let dataObjects: { timestamp: number; value: number }[] = [];\n    let isObjectData = false;\n\n    if (valuesAttr) {\n      try {\n        const parsedData = JSON.parse(valuesAttr);\n        if (Array.isArray(parsedData) && parsedData.length > 0) {\n          if (typeof parsedData[0] === \"object\" && parsedData[0] !== null) {\n            // Data is an array of objects with 'timestamp' and 'value'\n            isObjectData = true;\n            dataObjects = parsedData.map((item) => ({\n              timestamp: item.timestamp,\n              value: item.value,\n            }));\n            dataValues = dataObjects.map((item) => item.value);\n          } else if (typeof parsedData[0] === \"number\") {\n            // Data is an array of numbers\n            dataValues = parsedData.filter(Number.isFinite);\n          } else {\n            console.warn(\"Invalid data format in data-values:\", element);\n            return;\n          }\n        } else {\n          console.warn(\"Empty or invalid array in data-values:\", element);\n          return;\n        }\n      } catch (e) {\n        // If not JSON, try parsing as CSV (comma-separated values)\n        dataValues = valuesAttr\n          .split(\",\")\n          .map(parseFloat)\n          .filter(Number.isFinite);\n      }\n    } else {\n      console.warn(\"Missing data-values attribute for element:\", element);\n      return;\n    }\n\n    if (dataValues.length === 0) {\n      console.warn(\"No valid data values for element:\", element);\n      return;\n    }\n\n    // Read optional attributes with default values\n    const width = element.dataset.width ? parseInt(element.dataset.width) : 200;\n    const height = element.dataset.height\n      ? parseInt(element.dataset.height)\n      : Math.round(width * 0.2);\n    const filled = element.dataset.filled === \"true\";\n    const colorStroke = element.dataset.colorStroke || \"#8956ff\";\n    const colorFilled = element.dataset.colorFilled || colorStroke;\n    const strokeWidth = element.dataset.strokeWidth\n      ? parseFloat(element.dataset.strokeWidth)\n      : 2;\n    const filledOpacity =\n      element.dataset.filledOpacity !== undefined\n        ? parseFloat(element.dataset.filledOpacity)\n        : 0.2;\n    const ariaLabel = element.dataset.ariaLabel || \"Simple SparkLine Chart\";\n    const showTooltip = element.dataset.tooltip !== \"false\";\n    const tooltipPosition = element.dataset.tooltipPosition || \"above\";\n    const locale = element.dataset.locale || navigator.language || \"en-US\";\n\n    this.makeChart(\n      dataValues,\n      dataObjects,\n      isObjectData,\n      width,\n      height,\n      element,\n      filled,\n      colorStroke,\n      colorFilled,\n      strokeWidth,\n      filledOpacity,\n      ariaLabel,\n      showTooltip,\n      tooltipPosition,\n      locale,\n    );\n  }\n\n  private makeChart(\n    values: number[],\n    dataObjects: { timestamp: number; value: number }[],\n    isObjectData: boolean,\n    width: number,\n    height: number,\n    parent: HTMLElement,\n    filled: boolean,\n    colorStroke: string,\n    colorFilled: string,\n    strokeWidth: number,\n    filledOpacity: number,\n    ariaLabel: string,\n    showTooltip: boolean,\n    tooltipPosition: string,\n    locale: string,\n  ): void {\n    const svgNS = \"http://www.w3.org/2000/svg\";\n\n    const adjustedWidth = width;\n    const adjustedHeight = height;\n\n    const max = Math.max(...values);\n    const min = Math.min(...values);\n    const range = max - min || 1;\n\n    // Function to calculate Y coordinate\n    const c = (x: number): number => {\n      const s = (adjustedHeight - strokeWidth) / range;\n      return adjustedHeight - strokeWidth / 2 - s * (x - min);\n    };\n\n    // Create SVG element\n    const svg = document.createElementNS(svgNS, \"svg\");\n    svg.setAttribute(\"role\", \"img\");\n    svg.setAttribute(\"width\", adjustedWidth.toString());\n    svg.setAttribute(\"height\", adjustedHeight.toString());\n    svg.setAttribute(\"aria-label\", ariaLabel);\n    svg.setAttribute(\"viewBox\", `0 0 ${adjustedWidth} ${adjustedHeight}`);\n    svg.setAttribute(\"overflow\", \"visible\");\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n\n    const offset = values.length > 1 ? adjustedWidth / (values.length - 1) : 0;\n\n    // Generate points for the line\n    const linePoints: string[] = [];\n    for (let i = 0; i < values.length; i++) {\n      const x = (i * offset).toFixed(2);\n      const y = c(values[i]).toFixed(2);\n      linePoints.push(`${x},${y}`);\n    }\n\n    // Create filled area if 'filled' is true\n    if (filled) {\n      const fillPathD = `${linePoints\n        .map((p, i) => (i === 0 ? \"M\" + p : \"L\" + p))\n        .join(\" \")} L${adjustedWidth.toFixed(2)},${adjustedHeight.toFixed(\n        2,\n      )} L0,${adjustedHeight.toFixed(2)} Z`;\n\n      const fillElm = document.createElementNS(svgNS, \"path\");\n      fillElm.setAttribute(\"d\", fillPathD);\n      fillElm.setAttribute(\"stroke\", \"none\");\n      fillElm.setAttribute(\"fill\", colorFilled);\n      fillElm.setAttribute(\"fill-opacity\", filledOpacity.toString());\n      fillElm.classList.add(\"sparkline-fill\");\n      svg.appendChild(fillElm);\n    }\n\n    // Create the line path\n    const linePathD = `M${linePoints.join(\" L\")}`;\n\n    const pathElm = document.createElementNS(svgNS, \"path\");\n    pathElm.setAttribute(\"d\", linePathD);\n    pathElm.setAttribute(\"fill\", \"none\");\n    pathElm.setAttribute(\"stroke\", colorStroke);\n    pathElm.setAttribute(\"stroke-width\", strokeWidth.toString());\n    pathElm.setAttribute(\"stroke-linecap\", \"butt\");\n    pathElm.setAttribute(\"stroke-linejoin\", \"round\");\n    pathElm.classList.add(\"sparkline-path\");\n    svg.appendChild(pathElm);\n\n    // Create container for SVG and Tooltip\n    const container = document.createElement(\"div\");\n    container.style.position = \"relative\";\n    container.style.display = \"inline-block\";\n    container.style.width = adjustedWidth + \"px\";\n\n    // Append SVG to container\n    container.appendChild(svg);\n\n    // Create Tooltip\n    const tooltip = document.createElement(\"div\");\n    tooltip.style.position = \"absolute\";\n    tooltip.style.pointerEvents = \"none\";\n    tooltip.style.background = \"#333\";\n    tooltip.style.border = \"1px solid #222\";\n    tooltip.style.color = \"#fff\";\n    tooltip.style.fontSize = \"small\";\n    tooltip.style.whiteSpace = \"nowrap\";\n    tooltip.style.padding = \"2px 4px\";\n    tooltip.style.borderRadius = \"4px\";\n    tooltip.classList.add(\"sparkline-tooltip\");\n    tooltip.style.display = \"none\";\n\n    // Position the tooltip\n    if (tooltipPosition === \"bottom\") {\n      tooltip.style.top = adjustedHeight + \"px\";\n    } else {\n      tooltip.style.bottom = adjustedHeight + \"px\";\n    }\n\n    container.appendChild(tooltip);\n\n    // Clear parent element and append container\n    parent.innerHTML = \"\";\n    parent.appendChild(container);\n\n    if (!showTooltip) {\n      return;\n    }\n\n    // Create cursor line\n    const cursorLine = document.createElementNS(svgNS, \"line\");\n    cursorLine.setAttribute(\"class\", \"sparkline-cursor-line\");\n    cursorLine.setAttribute(\"x1\", \"0\");\n    cursorLine.setAttribute(\"y1\", \"0\");\n    cursorLine.setAttribute(\"x2\", \"0\");\n    cursorLine.setAttribute(\"y2\", adjustedHeight.toString());\n    cursorLine.setAttribute(\"stroke\", colorStroke);\n    cursorLine.setAttribute(\"stroke-width\", \"1\");\n    cursorLine.setAttribute(\"stroke-dasharray\", \"4\");\n    cursorLine.style.display = \"none\";\n    svg.appendChild(cursorLine);\n\n    // Create spot circle\n    const spot = document.createElementNS(svgNS, \"circle\");\n    spot.setAttribute(\"class\", \"sparkline-spot\");\n    spot.setAttribute(\"r\", (strokeWidth * 1.5).toString());\n    spot.setAttribute(\"fill\", colorStroke);\n    spot.setAttribute(\"stroke\", \"#fff\");\n    spot.setAttribute(\"stroke-width\", \"1\");\n    spot.style.display = \"none\";\n    svg.appendChild(spot);\n\n    // Create interaction layer\n    const interactionLayer = document.createElementNS(svgNS, \"rect\");\n    interactionLayer.setAttribute(\"width\", adjustedWidth.toString());\n    interactionLayer.setAttribute(\"height\", adjustedHeight.toString());\n    interactionLayer.setAttribute(\"fill\", \"transparent\");\n    interactionLayer.style.cursor = \"pointer\";\n    svg.appendChild(interactionLayer);\n\n    // Create date formatter\n    const dateFormatter = new Intl.DateTimeFormat(locale, {\n      hour: \"numeric\",\n      minute: \"numeric\",\n      second: \"numeric\",\n      day: \"numeric\",\n      month: \"short\",\n      year: \"numeric\",\n    });\n\n    // Event handlers\n    const handleMove = (event: MouseEvent | TouchEvent) => {\n      event.preventDefault();\n      const rect = svg.getBoundingClientRect();\n      let clientX;\n      if (event instanceof MouseEvent) {\n        clientX = event.clientX;\n      } else if (event.touches && event.touches.length > 0) {\n        clientX = event.touches[0].clientX;\n      } else {\n        return;\n      }\n      const x = clientX - rect.left;\n      const index = Math.round(x / offset);\n      const clampedIndex = Math.max(0, Math.min(values.length - 1, index));\n      const cx = clampedIndex * offset;\n      const cy = c(values[clampedIndex]);\n\n      spot.setAttribute(\"cx\", cx.toFixed(2));\n      spot.setAttribute(\"cy\", cy.toFixed(2));\n      spot.style.display = \"block\";\n\n      cursorLine.setAttribute(\"x1\", cx.toFixed(2));\n      cursorLine.setAttribute(\"x2\", cx.toFixed(2));\n      cursorLine.style.display = \"block\";\n\n      // Update tooltip content\n      if (isObjectData) {\n        const dataPoint = dataObjects[clampedIndex];\n        const date = dateFormatter.format(new Date(dataPoint.timestamp));\n        tooltip.innerHTML = `${dataPoint.value} (${date})`;\n      } else {\n        tooltip.textContent = values[clampedIndex].toString();\n      }\n\n      // Position tooltip horizontally\n      // Ensure tooltip is displayed to get correct dimensions\n      tooltip.style.display = \"block\";\n      const tooltipRect = tooltip.getBoundingClientRect();\n      let tooltipX = cx - tooltipRect.width / 2;\n      if (tooltipX < 0) {\n        tooltipX = 0;\n      } else if (tooltipX + tooltipRect.width > adjustedWidth) {\n        tooltipX = adjustedWidth - tooltipRect.width;\n      }\n      tooltip.style.left = tooltipX + \"px\";\n    };\n\n    const handleOut = () => {\n      spot.style.display = \"none\";\n      cursorLine.style.display = \"none\";\n\n      tooltip.style.display = \"none\";\n    };\n\n    interactionLayer.addEventListener(\"mousemove\", handleMove);\n    interactionLayer.addEventListener(\"touchmove\", handleMove);\n    interactionLayer.addEventListener(\"mouseleave\", handleOut);\n    interactionLayer.addEventListener(\"touchend\", handleOut);\n    interactionLayer.addEventListener(\"touchcancel\", handleOut);\n  }\n}\n\nexport default SimpleSparkLineChart;\n"],"names":[],"version":3,"file":"esmodule.js.map"}